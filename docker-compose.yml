networks:
  app-network:
    driver: bridge
services:
  surrealdb:
    image: surrealdb/surrealdb:latest
    container_name: surrealdb
    command: start --user ${SURREALDB_USERNAME} --pass ${SURREALDB_PASSWORD} rocksdb:/data/database.db
    environment:
      - SURREAL_LOG=info
    volumes:
      - ./infrastructure/surrealdb/data:/data
    ports:
      - "127.0.0.1:8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      - app-network
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./infrastructure/redis/data:/data
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "128M"
  web-apps:
    build:
      context: .
      dockerfile: web-apps/Dockerfile
    container_name: web-apps
    ports:
      - "${WEB_APPS_PORT}:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - BACKEND_SERVICE_HOST=http://backend-service:3001
      - WEB_APPS_SOCKET_HOST=ws://backend-service:3001
    restart: always
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 512M
  backend-service:
    build:
      context: ./backend-service
      dockerfile: Dockerfile
    container_name: backend-service
    ports:
      - "${BACKEND_SERVICE_PORT}:3001"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - SURREALDB_URL=http://surrealdb:8000
      - REDIS_HOST=redis
    restart: always
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 512M
